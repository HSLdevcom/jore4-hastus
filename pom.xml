<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fi.hsl.jore4</groupId>
    <artifactId>hastus</artifactId>
    <packaging>jar</packaging>
    <version>1.1.0</version>
    <name>Jore4 Hastus Server</name>
    <description>Jore4 hastus import/export server</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <java.version>11</java.version>
        <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>

        <!-- Maven build plugins and their dependencies -->
        <build-helper-plugin.version>3.3.0</build-helper-plugin.version>
        <build-properties-plugin.version>1.1.0</build-properties-plugin.version>
        <kotlin-plugin.version>1.7.20</kotlin-plugin.version>
        <surefire-plugin.version>2.22.2</surefire-plugin.version>
        <ktlint-plugin.version>1.16.0</ktlint-plugin.version>

        <!-- Library versions -->
        <kotlin-logging-jvm.version>3.0.2</kotlin-logging-jvm.version>
        <quicktheories.version>0.26</quicktheories.version>
        <spring-boot.version>2.7.13</spring-boot.version>
        <graphql-kotlin.version>6.4.1</graphql-kotlin.version>
        <ktor.version>2.0.3</ktor.version> <!-- must be in sync with graphql-kotlin.version -->
        <jackson-datatype.version>2.15.1</jackson-datatype.version>
        <mockk.version>1.12.4</mockk.version>

        <!-- Other properties -->
        <start.class>fi.hsl.jore4.hastus.HastusApplicationKt</start.class>
    </properties>

    <profiles>
        <profile>
            <id>prod</id>
            <properties>
                <build.profile.id>prod</build.profile.id>
                <build.property.file>profiles/${build.profile.id}/config.properties</build.property.file>
            </properties>
            <build>
                <filters>
                    <filter>${build.property.file}</filter>
                </filters>
            </build>
        </profile>

        <profile>
            <id>dev</id>
            <properties>
                <build.profile.id>dev</build.profile.id>
                <build.property.file>profiles/${build.profile.id}/config.properties</build.property.file>
                <build.property.user-override.file>profiles/${build.profile.id}/config.${user.name}.properties</build.property.user-override.file>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <filters>
                    <filter>${build.property.file}</filter>
                    <filter>${build.property.user-override.file}</filter>
                </filters>
                <plugins>
                    <!-- Read properties files for build plugins.
                         GraphQL plugin needs access to connection properties. -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>${build-properties-plugin.version}</version>

                        <configuration>
                            <files>
                                <file>${build.property.file}</file>
                                <file>${build.property.user-override.file}</file>
                            </files>
                        </configuration>

                        <executions>
                            <execution>
                                <id>read-config-properties</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>

            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>generate-graphql</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <build.profile.id>dev</build.profile.id>
                <build.property.file>profiles/${build.profile.id}/config.properties</build.property.file>
                <build.property.user-override.file>profiles/${build.profile.id}/config.${user.name}.properties</build.property.user-override.file>
            </properties>
            <build>
                <filters>
                    <filter>${build.property.file}</filter>
                    <filter>${build.property.user-override.file}</filter>
                </filters>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>${build-properties-plugin.version}</version>

                        <configuration>
                            <files>
                                <file>${build.property.file}</file>
                                <file>${build.property.user-override.file}</file>
                            </files>
                        </configuration>

                        <executions>
                            <execution>
                                <id>read-config-properties</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.expediagroup</groupId>
                        <artifactId>graphql-kotlin-maven-plugin</artifactId>
                        <version>${graphql-kotlin.version}</version>
                        <executions>
                            <execution>
                                <id>get-schema</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>introspect-schema</goal>
                                </goals>
                                <configuration>
                                    <endpoint>${hasura.url}</endpoint>
                                    <schemaFile>${project.resources[0].directory}/schema.graphql</schemaFile>
                                    <headers>
                                        <Content-type>application/json; charset=UTF-8</Content-type>
                                        <x-hasura-admin-secret>${hasura.secret}</x-hasura-admin-secret>
                                    </headers>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <resources>
            <!-- Resolve @some.key@ placeholders. -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <!-- Only copy other (non-filtered) resources. -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <!-- Resolve @some.key@ placeholders. -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </testResource>
            <!-- Only copy other (non-filtered) resources. -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <message>You are running an older version of Maven. Maven >= 3.3.9 is required</message>
                                    <version>[3.3.9,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <message>You are running an incompatible version of Java. JDK 11 is required</message>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/generated-sources/graphql</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin-plugin.version}</version>
                <configuration>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                    <args>
                        <!-- Enable strict mode for JSR-305 annotations. -->
                        <arg>-Xjsr305=strict</arg>
                    </args>
                </configuration>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin-plugin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin-plugin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Set Java compiling to occur after Kotlin compilation. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by Maven. -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by Maven. -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <fork>true</fork>
                    <mainClass>${start.class}</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.gantsign.maven</groupId>
                <artifactId>ktlint-maven-plugin</artifactId>
                <version>${ktlint-plugin.version}</version>
                <executions>
                    <execution>
                        <id>check</id>
                        <configuration>
                            <sourceRoots>${project.build.sourceDirectory}</sourceRoots>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.expediagroup</groupId>
                <artifactId>graphql-kotlin-maven-plugin</artifactId>
                <version>${graphql-kotlin.version}</version>
                <executions>
                    <execution>
                        <id>generate-queries</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate-client</goal>
                        </goals>
                        <configuration>
                            <packageName>fi.hsl.jore4.hastus.generated</packageName>
                            <schemaFile>${project.resources[0].directory}/schema.graphql</schemaFile>
                            <allowDeprecatedFields>true</allowDeprecatedFields>
                            <queryFileDirectory>src/main/resources/graphql</queryFileDirectory>
                            <customScalars>
                                <customScalar>
                                    <scalar>uuid</scalar>
                                    <type>java.util.UUID</type>
                                    <converter>fi.hsl.jore4.hastus.graphql.converter.UUIDScalarConverter</converter>
                                </customScalar>
                                <customScalar>
                                    <scalar>_uuid</scalar>
                                    <type>fi.hsl.jore4.hastus.graphql.UUIDList</type>
                                    <converter>fi.hsl.jore4.hastus.graphql.converter.UUIDListScalarConverter</converter>
                                </customScalar>
                                <customScalar>
                                    <scalar>date</scalar>
                                    <type>java.time.LocalDate</type>
                                    <converter>fi.hsl.jore4.hastus.graphql.converter.DateScalarConverter</converter>
                                </customScalar>
                                <customScalar>
                                    <scalar>timestamptz</scalar>
                                    <type>java.time.OffsetDateTime</type>
                                    <converter>fi.hsl.jore4.hastus.graphql.converter.DateTimeScalarConverter</converter>
                                </customScalar>
                                <customScalar>
                                    <scalar>jsonb</scalar>
                                    <type>fi.hsl.jore4.hastus.graphql.IJSONB</type>
                                    <converter>fi.hsl.jore4.hastus.graphql.converter.JsonbScalarConverter</converter>
                                </customScalar>
                                <customScalar>
                                    <scalar>geography</scalar>
                                    <type>fi.hsl.jore4.hastus.data.format.Coordinate</type>
                                    <converter>fi.hsl.jore4.hastus.graphql.converter.LocationScalarConverter</converter>
                                </customScalar>
                                <customScalar>
                                    <!-- Uses java.time.Duration instead of Kotlin because value classes are not
                                    supported by Jackson -->
                                    <scalar>interval</scalar>
                                    <type>java.time.Duration</type>
                                    <converter>fi.hsl.jore4.hastus.graphql.converter.DurationConverter</converter>
                                </customScalar>
                                <customScalar>
                                    <scalar>_Any</scalar>
                                    <type>kotlin.Any</type>
                                    <converter>fi.hsl.jore4.hastus.graphql.converter.GenericConverter</converter>
                                </customScalar>
                            </customScalars>
                            <serializer>JACKSON</serializer>
                            <useOptionalInputWrapper>true</useOptionalInputWrapper>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${jackson-datatype.version}</version>
        </dependency>

        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging-jvm</artifactId>
            <version>${kotlin-logging-jvm.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson-datatype.version}</version>
        </dependency>

        <dependency>
            <groupId>com.expediagroup</groupId>
            <artifactId>graphql-kotlin-ktor-client</artifactId>
            <version>${graphql-kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>com.expediagroup</groupId>
            <artifactId>graphql-kotlin-client-jackson</artifactId>
            <version>${graphql-kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-logging-jvm</artifactId>
            <version>${ktor.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.mockk</groupId>
            <artifactId>mockk</artifactId>
            <version>${mockk.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.quicktheories</groupId>
            <artifactId>quicktheories</artifactId>
            <version>${quicktheories.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
